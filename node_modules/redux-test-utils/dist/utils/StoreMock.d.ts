import { AnyAction, Store } from 'redux';
import { MockDispatch } from './DispatchMock';
export interface MockStore<S, T extends AnyAction> extends Omit<Store<S, T>, 'Symbol.observable'>, MockDispatch<T> {
}
export declare const emptyStore: () => Pick<Store<{}, AnyAction>, "dispatch" | "getState" | "subscribe" | "replaceReducer">;
export declare const createMockStore: <S, T extends AnyAction>(state: S) => MockStore<S, T>;
